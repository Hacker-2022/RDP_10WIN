name: RDP Miner Workflow

on:
  workflow_dispatch:
    inputs:
      profile:
        description: 'Miner profile name'
        required: true
        default: 'default'
  schedule:
    # Daily at 10:00 IST (4:30 UTC)
    - cron: '30 4 * * *'

# Define permissions explicitly (principle of least privilege)
permissions:
  contents: write  # Needed for git push
  actions: write   # Needed for re-triggering workflow

# Ensure only one workflow per profile runs at a time
concurrency:
  group: ${{ github.workflow }}-${{ github.event.inputs.profile || 'default' }}
  cancel-in-progress: false

jobs:
  rdp-miner:
    runs-on: windows-latest
    # Limit runtime to 5.5 hours
    timeout-minutes: 330
    env:
      PROFILE: ${{ github.event.inputs.profile || 'default' }}
      # Set LiteManager credentials at job level so they're available to all steps
      LITEMANAGER_ID: ${{ secrets.LITEMANAGER_ID }}
      LITEMANAGER_PASS: ${{ secrets.LITEMANAGER_PASS }}
      
    steps:
      - name: Checkout repository
        # Using specific commit hash for security (v3)
        uses: actions/checkout@d50f8ea76748df49594d9b109b614f3b4db63c71
        with:
          persist-credentials: true
          
      - name: Cache installer dependencies
        # Using specific commit hash for security (v3)
        uses: actions/cache@4b0cf6cc4619e737324ddfcec08fff2413359514
        with:
          path: |
            ~\.chocolatey
            ~\AppData\Local\pip\Cache
          key: ${{ runner.os }}-installer-${{ hashFiles('**/Downloads.bat') }}
          restore-keys: |
            ${{ runner.os }}-installer-
            
      - name: Clean up profile directory
        shell: cmd
        run: |
          if exist "miner-state\${{ env.PROFILE }}" (
            echo "Cleaning up existing profile directory: miner-state\${{ env.PROFILE }}"
            rmdir /s /q "miner-state\${{ env.PROFILE }}"
          )
          mkdir "miner-state\${{ env.PROFILE }}"
          mkdir "miner-state\${{ env.PROFILE }}\logs"
          
      - name: Set LiteManager credentials from secrets (if available)
        shell: cmd
        run: |
          if "${{ secrets.LITEMANAGER_ID }}" NEQ "" if "${{ secrets.LITEMANAGER_PASS }}" NEQ "" (
            echo Setting LiteManager credentials from secrets
            REM These are also set at the job level, but we set them here for compatibility
            set LITEMANAGER_ID=${{ secrets.LITEMANAGER_ID }}
            set LITEMANAGER_PASS=${{ secrets.LITEMANAGER_PASS }}
          )
          
      - name: Download and install LiteManager
        shell: cmd
        run: |
          call Downloads.bat ${{ env.PROFILE }}
        
      - name: Connect to LiteManager
        shell: cmd
        run: |
          call show.bat ${{ env.PROFILE }}
          
      - name: Run mining loop
        shell: cmd
        run: |
          call loop.bat ${{ env.PROFILE }}
          
      - name: Clean up logs to prevent repository bloat
        shell: cmd
        run: |
          call cleanup_logs.bat ${{ env.PROFILE }} 3 1024
          
      - name: Commit state back to repository
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add miner-state/${{ env.PROFILE }}/creds.txt
          git add -f miner-state/${{ env.PROFILE }}/logs/*.txt
          git add -f miner-state/${{ env.PROFILE }}/logs/*.log
          git commit -m "Update miner state for profile ${{ env.PROFILE }}" || echo "No changes to commit"
          git push
          
      - name: Upload logs as artifacts
        # Using specific commit hash for security (v3)
        uses: actions/upload-artifact@6673cd052c4cd6fcf4b4e6e60ea986c889389535
        with:
          name: miner-logs-${{ env.PROFILE }}
          path: miner-state/${{ env.PROFILE }}/logs/**/*.txt
          if-no-files-found: warn
          
      - name: Re-trigger workflow on success
        if: success()
        run: |
          echo "Waiting 1 hour before re-triggering workflow..."
          timeout /t 3600
          
          # Use GitHub API to re-trigger the workflow with the same profile
          $headers = @{
            "Authorization" = "token ${{ secrets.GITHUB_TOKEN }}"
            "Accept" = "application/vnd.github.v3+json"
          }
          
          $body = @{
            "ref" = "${{ github.ref }}"
            "inputs" = @{
              "profile" = "${{ env.PROFILE }}"
            }
          } | ConvertTo-Json
          
          $workflowId = "${{ github.workflow }}"
          $repoFullName = "${{ github.repository }}"
          
          Invoke-RestMethod -Uri "https://api.github.com/repos/$repoFullName/actions/workflows/$workflowId/dispatches" -Method Post -Headers $headers -Body $body -ContentType "application/json"
          
      - name: Report failure
        if: failure()
        run: |
          echo "::error::Miner workflow failed for profile ${{ env.PROFILE }}"
          echo "Miner workflow failed for profile ${{ env.PROFILE }}" >> $GITHUB_STEP_SUMMARY
          echo "Check the logs for more details." >> $GITHUB_STEP_SUMMARY
